/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    id 'java'
    id 'java-library'
    id 'maven-publish'
    id 'jacoco'
    id 'application'
    id 'org.sonarqube' version '3.0'
    id 'org.owasp.dependencycheck' version '6.0.5'
    id 'org.kordamp.gradle.jandex' version '0.8.0'
}

sonarqube {
    properties {
        property "sonar.sourceEncoding", ${project.compileJava.options.encoding}
        property "sonar.exclusions", "**/clover/src-instrumented/**,**/clover/src-test-instrumented/**"
        property "sonar.projectName",${project.name}
        property "sonar.projectKey",${project.groupId}.${project.artifactId}
        property "sonar.projectVersion>",${project.version}
        property "sonar.log.level",'DEBUG'
        property "sonar.sources",${sourceSets.main.allJava.srcDirs}
        property "sonar.tests", ${sourceSets.test.allJava.srcDirs}
        property "sonar.java.source", ${project.sourceCompatibility}
        /*
        <sonar.clover.version>${clover.version}</sonar.clover.version>
        */
        property "sonar.java.coveragePlugin",'clover'
        property "sonar.clover.reportPath", "${project.buildDir}/site/clover/clover.xml"
        property "sonar.surefire.reportsPath","${project.buildDir}/surefire-reports"
        property "sonar.junit.reportPaths", "${project.rootDir}/target/surefire-reports"
        property "sonar.clover.reportPath", "${project.rootDir}/target/site/clover/clover.xml"
        property "sonar.clover.reportPaths", "${project.rootDir}/target/site/clover/clover.xml"
        property "sonar.coverage.jacoco.xmlReportPaths", "${project.buildDir}/jacoco/test/jacocoTestReport.xml"
    }
}

repositories {
    mavenLocal()
    maven {
        url = uri('https://repo.maven.apache.org/maven2/')
    }
    jcenter()
}

dependencies {
    api 'jakarta.servlet:jakarta.servlet-api:4.0.3'
    implementation 'org.glassfish.jersey.containers:jersey-container-grizzly2-http:2.33'
    implementation 'org.glassfish.jersey.inject:jersey-hk2:2.33'
    implementation 'org.glassfish.jersey.core:jersey-client:2.33'
    implementation 'org.glassfish.jersey.core:jersey-server:2.33'
    implementation 'org.glassfish.jersey.containers:jersey-container-servlet:2.33'
    implementation 'org.glassfish.jersey.security:oauth1-server:2.33'
    implementation 'javax.annotation:javax.annotation-api:1.3.2'
    implementation 'org.glassfish.jersey.media:jersey-media-json-jackson:2.33'
    implementation 'org.glassfish.jersey.media:jersey-media-json-processing:2.33'
    implementation 'org.glassfish.jaxb:jaxb-runtime:2.3.2'
    implementation 'org.glassfish.jersey.media:jersey-media-multipart:2.33'
    implementation 'org.glassfish.jersey.ext.cdi:jersey-cdi1x:2.33'
    implementation 'org.glassfish.jersey.ext.cdi:jersey-weld2-se:2.33'
    implementation 'org.jboss.weld.se:weld-se-core:3.1.2.Final'
    implementation 'org.jboss:jandex:2.1.3.Final'
    implementation 'org.apache.logging.log4j:log4j-api:2.12.1'
    implementation 'org.apache.logging.log4j:log4j-core:2.12.1'
    implementation 'org.apache.logging.log4j:log4j-slf4j-impl:2.12.1'
    implementation 'org.apache.logging.log4j:log4j-jul:2.12.1'
    implementation 'org.apache.logging.log4j:log4j-web:2.12.1'
    implementation 'com.fasterxml:classmate:1.3.1'
    implementation 'io.swagger.core.v3:swagger-jaxrs2:2.1.6'
    implementation 'io.swagger.core.v3:swagger-jaxrs2-servlet-initializer-v2:2.1.6'
    implementation 'org.webjars:swagger-ui:3.37.2'
    implementation 'javax.persistence:javax.persistence-api:2.2'
    implementation 'org.eclipse.persistence:eclipselink:2.7.7'
    implementation 'org.jooq:jooq:3.14.4'
    implementation 'org.jooq:jooq-meta:3.14.4'
    implementation 'org.jooq:jooq-codegen:3.14.4'
    implementation 'org.modelmapper:modelmapper:2.3.0'
    testImplementation 'org.glassfish.jersey.test-framework.providers:jersey-test-framework-provider-grizzly2:2.33'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.6.2'
    testCompileOnly 'junit:junit:4.13'
    testRuntimeOnly 'org.junit.vintage:junit-vintage-engine:5.6.2'
    // testCompileOnly  'junit:junit:4.12'
    testImplementation 'org.mockito:mockito-core:2.25.0'
    testImplementation 'org.apache.derby:derby:10.15.2.0'
    testImplementation 'org.apache.derby:derbytools:10.15.2.0'
}
/*
jacoco {
    toolVersion = "0.8.6"
    reportsDirectory = file("${project.buildDir}/customJacocoReportDir")
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.enabled true
        csv.enabled true
        html.destination file("${project.buildDir}/jacocoHtml")
    }
}

task applicationCodeCoverageReport(type:JacocoReport) {
    executionData run
    sourceSets sourceSets.main
}
*/

test {
    /*
    useJUnitPlatform {
        // includeTags 'fast', 'smoke & feature-a'
        // excludeTags 'slow', 'ci'
        includeEngines 'junit-vintage'
        // excludeEngines 'junit-jupiter'
    }
    */
    // finalizedBy jacocoTestReport
    useJUnit {
    }
}

dependencyCheck {
    autoUpdate=true
    format='ALL'
    suppressionFile="${project.rootDir}/build-support/suppressions.xml"
}

java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
    withJavadocJar()
    withSourcesJar()
}

compileJava {
    options.encoding = 'UTF-8'
    options.compilerArgs << '-Xlint:deprecation'
}

compileTestJava {
    options.encoding = 'UTF-8'
    options.compilerArgs << '-Xlint:deprecation'
}

javadoc {
    options.encoding = 'UTF-8'
}

check.dependsOn dependencyCheckAnalyze

project.tasks["sonarqube"].dependsOn "jacocoTestReport"

group = 'org.example'
version = '1.0-SNAPSHOT'
description = 'jersey-grizzly2-test'


publishing {
    publications {
        maven(MavenPublication) {
            groupId = group
            artifactId = description
            version = version
            from components.java
        }
    }
}